# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy PHP app to Azure Web App - plin-web

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout Code
      - uses: actions/checkout@v2

      # Node.js and NPM
      - name: Setup Node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: '14'
          check-latest: true

      - name: Cache node_modules directory
        uses: actions/cache@v2
        id: node_modules-cache
        with:
          path: node_modules
          key: ubuntu-latest-build-${{ hashFiles('**/package.json') }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install NPM packages
        if: steps.node_modules-cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Frontend production build
        run: npm run prod

      # PHP and Composer
      - name: Install PHP versions
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.0

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v2
        id: actions-cache
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: $ubuntu-latest-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Cache PHP dependencies
        uses: actions/cache@v2
        id: vendor-cache
        with:
          path: vendor
          key: ubuntu-latest-build-${{ hashFiles('**/composer.lock') }}

      - name: Install Dependencies
        if: steps.vendor-cache.outputs.cache-hit != 'true'
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Update Dependencies with latest stable
        if: matrix.dependency-stability == 'prefer-stable'
        run: composer update --prefer-stable
      - name: Update Dependencies with lowest stable
        if: matrix.dependency-stability == 'prefer-lowest'
        run: composer update --prefer-stable --prefer-lowest

      # Setup Laravel Files
      - name: Show dir
        run: pwd
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Generate key
        run: php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Clear Laravel caches
        run: php artisan optimize:clear
#      - name: Run Migrations
#        run: php artisan migrate

      # Create archive file
      - name: Create release archive
        uses: thedoctor0/zip-release@master
        with:
          filename: release.zip
          exclusions: '*.git* .editorconfig /*node_modules/* /*storage/*'

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: php-app
          path: release.zip
          retention-days: 1

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: php-app

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: 'plin-web'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_1C71F1AA4AD04FD98F92CDC8460D476D }}
          package: release.zip
